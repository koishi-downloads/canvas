diff -Naur -x target -x Cargo.lock -x .git rust-skia/skia-bindings/build_support/skia/config.rs modified/skia-bindings/build_support/skia/config.rs
--- rust-skia/skia-bindings/build_support/skia/config.rs    2022-06-03 12:39:48.306141844 -0400
+++ modified/skia-bindings/build_support/skia/config.rs     2022-06-04 11:28:12.106302191 -0400
@@ -241,9 +241,9 @@
                     args.push(("skia_use_webgl", yes_if(features.gpu())));
                     args.push(("target_cpu", quote("wasm")));
                 }
-                (arch, _, os, _) => {
-                    let skia_target_os = match os {
-                        "darwin" => {
+                (arch, _, os, abi) => {
+                    let skia_target_os = match (os, abi) {
+                        ("darwin", _) => {
                             // Skia will take care to set a specific `-target` for the current macOS
                             // version. So we don't push another target `--target` that may
                             // conflict.
@@ -253,8 +253,14 @@
                             cargo::rerun_if_env_var_changed("MACOSX_DEPLOYMENT_TARGET");
                             "mac"
                         }
-                        "windows" => "win",
-                        _ => os,
+                        ("windows", _) => "win",
+                        ("linux", Some("musl")) => {
+                            let cpp = "10.3.1";
+                            cflags.push(format!("-I/usr/include/c++/{}", cpp));
+                            cflags.push(format!("-I/usr/include/c++/{}/{}-alpine-linux-musl", cpp, arch));
+                            os
+                        },
+                        (_, _) => os,
                     };
                     args.push(("target_os", quote(skia_target_os)));
                     args.push(("target_cpu", quote(clang::target_arch(arch))));
@@ -409,8 +415,8 @@
 /// contains a fully configured Skia source tree generated by gn.
 pub fn build_skia(config: &binaries_config::BinariesConfiguration, ninja_command: &Path) {
     let ninja_status = Command::new(ninja_command)
-        .args(&config.ninja_built_libraries)
         .args(&["-C", config.output_directory.to_str().unwrap()])
+        .args(&config.ninja_built_libraries)
         .stdout(Stdio::inherit())
         .stderr(Stdio::inherit())
         .status();
diff -Naur -x target -x Cargo.lock -x .git rust-skia/skia-bindings/build_support/skia_bindgen.rs modified/skia-bindings/build_support/skia_bindgen.rs
--- rust-skia/skia-bindings/build_support/skia_bindgen.rs   2022-06-03 12:39:48.306540689 -0400
+++ modified/skia-bindings/build_support/skia_bindgen.rs    2022-06-04 11:28:52.129433452 -0400
@@ -246,6 +246,11 @@
                 builder = builder.clang_arg(arg);
             }
         }
+        (arch, "unknown", "linux", Some("musl")) => {
+            let cpp = "10.3.1";
+            cc_build.include(format!("/usr/include/c++/{}", cpp));
+            cc_build.include(format!("/usr/include/c++/{}/{}-alpine-linux-musl", cpp, arch));
+        }
         ("wasm32", "unknown", "emscripten", _) => {
             // visibility=default, otherwise some types may be missing:
             // https://github.com/rust-lang/rust-bindgen/issues/751#issuecomment-555735577
